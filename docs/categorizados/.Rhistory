beta[i,] <- power.anova.test(groups=4,n=nn,between.var=var(grp.means),
within.var=sd[i]^2,sig.level=.01)$power
colnames(beta) <- nn; rownames(beta) <- sd
opar <- par(las=1,cex=.8)
matplot(sd,beta,type="l",xlab=expression(sigma),ylab=expression(1-beta),col=1,
lty=1)
grid()
text(rep(70,10),beta[length(sd),],as.character(nn),pos=3)
title("Operating Characteristic Curve\n for a=4 treatment means")
par(opar)
trat.med<-c(34.40, 22.84, 23.29, 22.64)
power.anova.test(groups=4,between.var = var(trat.med),within.var = 70, sig.level = 0.05, power=0.80)
coef(fit.anova)
coef(fit.aov)
fit.anova<-Anova(Producao~Suplemento, type=3)
fit.anova<-Anova(Producao~Suplemento, type = 3)
dummy.coef(fit.aov)
library(emmeans)
emmeans(fit.aov,specs = ~Suplemento)
options(contrasts = c("contr.sum", "contr.poly"))
fit.aov2<-aov(Producao~Suplemento, data=dados)
coef(fit.aov2)
dummy.coef(fit.aov2)
summary(fit.aov)
summary.lm(fit.aov)
glht(fit.aov, linfct = mcp(Suplemento = C))
C
glht(fit.aov, linfct = mcp(Suplemento = contr1))
glht(fit.aov, linfct = mcp(Producao = contr1))
glht(fit.aov, linfct = mcp(dados$Suplemento = contr1))
glht(fit.aov, linfct = mcp(contr1))
glht(fit.aov, linfct = mcp(dados$Suplemento))
glht(fit.aov, linfct = mcp(dados$Suplemento=contr1))
multcomp::glht(fit.aov, linfct = mcp(dados$Suplemento=contr1))
multcomp::glht(fit.aov, linfct = mcp(dados$Suplemento=c(3,-1,-1,-1)))
??glht
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit.aov, linfct = mcp(Suplemento = contr))
summary.aov(fit.aov)
fit<-lm(Producao~factor(Suplemento), data=dados)
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit, linfct = mcp(Suplemento = contr))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit, linfct = mcp(factor(Suplemento) = contr))
dados$Suplemento<-ordered(dados$Suplemento, levels =("A", "B", "M", "S"))
dados$Suplemento<-ordered(dados$Suplemento, levels = ("A", "B", "M", "S"))
dados$Suplemento<-ordered(dados$Suplemento, levels = c("A", "B", "M", "S"))
fit<-lm(Producao~Suplemento, data=dados)
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit, linfct = mcp(Suplemento = contr))
fit.aov<-aov(Producao~factor(Suplemento), data=dados)
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit.aov, linfct = mcp(Suplemento = contr))
fit.aov<-aov(Producao~Suplemento, data=dados)
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit.aov, linfct = mcp(Suplemento = contr))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
glht(fit.aov, linfct = mcp(Suplemento = contr))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
confint(glht(fit.aov, linfct = mcp(Suplemento = contr)))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
plot(confint(glht(fit.aov, linfct = mcp(Suplemento = contr))))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
plot(confint(glht(fit.aov, linfct = mcp(Suplemento = contr))))
contr <- rbind("C1" = c(3, -1, -1,-1),
"C2" = c(0, -1, 2, -1),
"C3" = c(0, 1, 0, -1))
confint(glht(fit.aov, linfct = mcp(Suplemento = contr)))
summary(fit.aov)
summary.aov(fit.aov,split=list(Suplemento=list("C1"=1, "C2"=2, "C3"=3)))
levels(dados$Suplemento)
summary.aov(fit.aov,split=list(Suplemento=contr'')
summary.aov(fit.aov,split=list(Suplemento=contr1)
)
contr1
C1<-c(3,-1,-1,-1)
C2=c(0,-1,2,-1)
C3=c(0,1,0-1)
C=cbind(C1,C2,C3)
C=cbind(C1,C2)
C=cbind(C1,C2)
C
summary.aov(fit.aov,split=list(Suplemento=contr1')
)
)
summary.aov(fit.aov,split=list(Suplemento=t(contr1)
)
C3
C3=c(0,1,0,-1)
C=cbind(C1,C2,C3)
contrasts
constrasts(dados$Suplemento)<-C
contrasts(dados$Suplemento)<-C
fit<-aov(Producao~Suplemento,data=dados)
summary(fit)
summary.aov
summary.aov(fit,split=list(Suplemento=list("C1"=1, "C2"=2, "C3"=3)))
dados$Suplemento<-ordered(dados$Suplemento, levels = c("A", "B", "M", "S"))
fit.aov<-aov(Producao~Suplemento, data=dados)
summary.aov(fit.aov,split=list(Suplemento=list("C1"=1, "C2"=2, "C3"=3)))
contr1
contr1.ginv<-ginv(contr1)
contrasts(dados$Suplemento)=contr1.ginv
fit<-lm(Producao~Suplemento,data=dados)
anova(fit)
dados.contr<-data.frame(model.matrix(Producao~Suplemento,dados)[,-1])
names(dados.contr)
names(dados.contr)=paste("Contraste",1:3)
dados.contr$Producao=dados$Producao
dados.contr2<-lm(Producao~.,data=dados.contr)
aov2<-anova(dados.contr2)
aov2
fit.aov<-aov(Producao~Suplemento, data=dados)
model.tables(fit.aov)
summary.aov(fit.aov)
summary.aov(fit.aov,contrasts(Suplemento,T))
summary.aov(fit.aov,split=contr''
summary.aov(fit.aov,split=contr1)
summary.aov(fit.aov,split=list("C1"=1,"C2"=2,"C3"=3))
names(dados$Suplemento)
levels(dados$Suplemento)
C<-contrasts(dados$Suplemento)
C
C<-contrasts(t(dados$Suplemento))
C
C
contr1
contr1<-contasts(data$Suplemento)
contr1<-contrasts(data$Suplemento)
fit.aov
summary(fit.aov)
summary(fit.aov,split=list("Suplemento"=list("C1"=c(3,-1,-1,-1),"C2"=c(0,-1,2,-1),"C3"=c(0,1,0,-1))))
summary(fit.aov,split=list("Suplemento"=list("C1"=c(3,-1,-1,-1),"C2"=c(0,-1,2,-1),"C3"=c(0,1,0,-1)))
)
summary(fit.aov,split=list("Suplemento"=list("C1"=c(1,-1/3,-1/3,-1/3),"C2"=c(0,-1/2,1,-1/2),"C3"=c(0,1,0,-1))))
contrasts(dados$Suplemento)=contr1
contrasts(dados$Suplemento)=t(contr1)
contrasts(dados$Suplemento)
C1=c(-1,-1,-1,3)
C2=c(2,-1,-1,0)
C3=c(0,-1,1-0)
contr2<-cbind(C1,C2,C3)
C3=c(0,-1,1,0)
contr2<-cbind(C1,C2,C3)
contrasts(dados$Suplemento)=contr2
contrasts(dados$Suplemento)
fit.aov1<-aov(Producao~Suplemento, data=dados)
summary.aov
summary.aov(fit.aov1,contrast(list()))
fit.aov1<-aov(Producao~Suplemento, contrasts=list(Suplemento=contr2), data=dados)
fit.aov1
summary(fit.aov1)
contrast(fit.aov1,contr2)
contrasts(dados$Suplemento)<-contr2
fit.aov2<-aov(Producao~Suplemento,data=dados)
summary.aov(fit.aov2,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
contr3<-rbind("C1"=c(-1,-1,-1,3),"C2"=c(2,-1,-1,0),"C3"=c(0,-1,1-0))
contr3<-rbind("C1"=c(-1,-1,-1,3),"C2"=c(2,-1,-1,0),"C3"=c(0,-1,1,-0))
mht<-summary(glht(fit.aov, linfct = mcp(Suplemento = contr3)))
mht
contr1<- rbind("C1"=c(-1,-1,-1,3),
"C2"=c(2,-1,-1,0),
"C3"=c(0,-1,1-0))
mht<-summary(glht(fit.aov, linfct = mcp(Suplemento = contr1)))
mht
contrasts(dados$Suplemento)<-contr1
fit.aov2<-aov(Producao~Suplemento,data=dados)
summary.aov(fit.aov2,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
contrasts(dados$Suplemento)<-contr1
fit.aov2<-aov(Producao~Suplemento,data=dados)
summary.aov(fit.aov2,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
t(contr1)
(contr1
contr1
contr1
contrasts(dados$Suplemento)<-contr1
fit.aov2<-aov(Producao~Suplemento,data=dados)
summary.aov(fit.aov2,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
contr2<-cbind(C1,C2,C3)
contrasts(dados$Suplemento)<-contr1
contrasts(dados$Suplemento)<-contr1
contrasts(dados$Suplemento)<-t(contr1)
contrasts(dados$Suplemento)
summary.aov(fit.aov,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
contrasts(dados$Suplemento)<-contr1
fit.aov2<-aov(Producao~Suplemento,data=dados)
summary.aov(fit.aov2,split=list(Suplemento=list("C1"=1,"C2"=2,"C3"=3)))
options(htmltools.dir.version = FALSE)
modelsummary::datasummary(Rendimento*Fertilizante~Parcela*(Mean+SD), data=dados.f)
dados.f<-tibble::tibble(read.csv("/home/nataly/Dropbox/Nataly/xaringan/Planejamento_de_Experimentos_I/planejamento/docs/db/fertilizantes.csv",sep=","))
#knitr::kable(head(dados), format='markdown')
dados.f%>%
DT::datatable(class = "compact", rownames = FALSE, extensions = "Buttons",
options = list(dom = 'tBp',
buttons = list(
list(extend = 'csv', filename = "suplementos"),
list(extend = 'excel', filename = "suplementos"),
list(extend = 'pdf', filename = "suplementos")),
pageLength = 12))
modelsummary::datasummary(Rendimento*factor(Fertilizante)~Parcela*(Mean+SD), data=dados.f)
install.packages("latticeExtra")
install.packages(c("BH", "brew", "carData", "datawizard", "emmeans", "foreach", "gld", "googleAuthR", "gower", "gWidgets2", "gWidgets2tcltk", "insight", "iterators", "lme4", "modelsummary", "multcomp", "nloptr", "parallelly", "parameters", "pkgbuild", "progressr", "quantreg", "questionr", "RcppArmadillo", "sessioninfo"))
install.packages("latticeExtra")
install.packages("reshape")
install.packages("latticeExtra")
install.packages("png")
alturas<-c(26.2,26.0,25.0,25.4,24.8,24.6,26.7,25.2,25.7,26.3,25.1,26.4,19.6,21.1,19.0,18.6,22.8,19.4,18.8,19.2,19.8,21.4,22.8,21.3)
alturas
recip<-c("R1","R1","R1","R1","R1","R1","R1","R1","R2","R2","R2","R2","R2","R2","R2","R2","R3","R3","R3","R3","R3","R3","R3","R3")
recip
esp<-c("E1","E1","E1","E1","E2","E2","E2","E2","E1","E1","E1","E1","E2","E2","E2","E2","E1","E1","E1","E1","E2","E2","E2","E2")
dados<-cbind(alturas,recip,esp)
dados
interaction.plot(recip,esp,alturas,legend=T,xlab="Recipiente",trace.label="EspÃ©cie",col=c(2,4))
fatorial.aov<-aov(alturas~recip*esp)
summary(fatorial.aov)
fat.esprec = aov(alturas ~ recip/esp)
summary(fat.esprec, split=list("recip:esp" = list(r1=1, r2=2, r3=3)))
coef(fatorial.aov)
names(coef(fatorial.aov))
fat.recesp = aov(alturas ~ esp/recip)
summary(fat.recesp, split=list("esp:recip" = list(e1=c(1,3), e2=c(2,4))))
names(coef(fat.recesp))
names(coef(fat.esprec))
TukeyHSD(fat.esprec,"recip")
options(htmltools.dir.version = FALSE)
dados.fator<-tibble::tibble(read.csv("/home/nataly/Dropbox/Nataly/xaringan/Planejamento_de_Experimentos_I/planejamento/docs/db/refrigerante.csv",sep=","))
#knitr::kable(head(dados), format='markdown')
dados.fat_2_3%>%
DT::datatable(class = "compact", rownames = FALSE, extensions = "Buttons",
options = list(dom = 'tBp',
buttons = list(
list(extend = 'csv', filename = "refrigerante"),
list(extend = 'excel', filename = "refrigerante"),
list(extend = 'pdf', filename = "refrigerante")),
pageLength = 12))
install.packages("FrF2")
install.packages("DoE.base")
install.packages("partitions")
install.packages("gmp")
install.packages("FrF2")
install.packages("BHH2")
# Analise de Dados Categorizados
Material da disciplina AnÃ¡lise de Dados Categorizados
---
layout: default
title: AnÃ¡lise de Dados Categorizados
author: LaboratÃ³rio de EstatÃ­stica e ComputaÃ§Ã£o Natural - LECON -
description: RepositÃ³rio exclusivo para a disciplina de AnÃ¡lise de Dados Categorizados.
---
install.packages("devtools")
devtools::install_github('emitanaka/anicon')
migraine <- xtabs(freq ~ .,
cbind(expand.grid(treatment=c("active", "placebo"),
response =c("better", "same"),
gender   =c("female", "male")),
freq=c(16, 5, 11, 20, 12, 7, 16, 19))
)
migrain
migraine
BreslowDayTest(migraine)
install.packages("DescTools")
require(DescTools)
BreslowDayTest(migraine)
mantelhaen.test(migraine)
OddsRatio(migraine)
odds.ratio(migraine)
OddsRatio(migraine[,1])
OddsRatio(migraine[,,1])
OddsRatio(migraine[1,,])
OddsRatio(migraine[2,,])
migraine[1,,]
migraine[2,,]
migraine[,1,]
migraine[,,1]
OddsRatio(migraine[,,1])
mantelhaen.test(migraine)
summary(OddsRatio(migraine[,,1]))
summary(OddsRatio(migraine))
for (i in 1:2) {
}
for (i in 1:2) {
print(OddsRatio(migraine[,,i]))
}
for (i in 1:2) {
print(OddsRatio(migraine[,,i])$res[1])
}
for (i in 1:2) {
print(confint(OddsRatio(migraine[,,i]))
}
for (i in 1:2) {
print(confint(OddsRatio(migraine[,,i])))
}
??OddsRatio
vcd::oddsratio(migraine,log=T)
require(vcd)
install.packages("vcd")
require(vcd)
vcd::oddsratio(migraine,log=T)
oratio<-vcd::oddsratio(migraine,log=T)
confint(oratio)
install.packages("xaringan")
dados<-matrix(c(221,200,208,160,291,106,360,160,316,
140,311,97),nc=4)
dados
chisq.test(dados)
dados
install.packages("mada"")
install.packages("mada")
require(mada)
madad(dados)
data(AuditC)
AuditC
smoking
library(caret)
install.packages("caret")
library(caret)
dados<-matrix(c(221,200,208,160,291,106,360,160,316,
140,311,97),nc=4)
dados
chisq.test(dados)
dados
dados<-matrix(c(52, 9, 15, 74),nc=2)
dados
chisq.test(dados)
dados
sensitivity(dados)
niveis<-c("Positivo","Negativo")
niveis<-c("Presente","Ausente")
metast<-factor(rep())
metast<-factor(rep(niveis,times=c(67,83)),levels = rev(niveis))
metast
tomo<-factor(c(rep(niveis,times=c(52,15)),rep(niveis,times=c(9,74))),levels = rev(niveis))
tomo
xtab<-table(tomo,metast)
xtab
xtab<-table(metast,tomo)
xtab
sensitivity(xtab)
tab<-matrix(c(52,15,9,74), ncol=2, byrow = T)
tab
tab<-matrix(c(52,15,9,74), ncol=2, byrow = T)
colnames=
colnames(tab)<-c("T+","T-")
rownames(tab)<-c("Presente","Ausente")
tab
specificity(tab)
madad
madad(tab)
mada(tab)
tab<-matrix(c(52,15,9,74), ncol=2, byrow = T)
rownames(tab)<-c("1","0")
colnames(tab)<-c("1","0")
tab
sens(tab)
tab<-matrix(c(52,15,9,74), ncol=2, byrow = T)
colnames(tab)<-c(1,0)
rownames(tab)<-c(1,0)
tab
sens(tab)
install.packages("epiR")
require(epiR)
epi.2by2(a=400, b=4600, c=80, d=1920, method="cohort.count",
conf.level=0.95, units=7000, verbose=FALSE)
??epiR
epi.2by2(a=400, b=4600, c=80, d=1920, method="cohort.count",
conf.level=0.95, units=100, verbose=FALSE)
install.packages("epiR")
install.packages("epiR")
install.packages("units")
install.packages("units")
install.packages("epiR")
install.packages("epiR")
require(epiR)
epi.2by2(a=400, b=4600, c=80, d=1920, method="cohort.count",
conf.level=0.95, units=100, verbose=FALSE)
epi.2by2(a=400, b=4600, c=80, d=1920, method="cohort.count",conf.level=0.95, units=100, verbose=FALSE)
dat.v01 <- c(13,2163,5,3349); dat.v01
epi.2by2(dat = dat.v01, method = "cross.sectional", digits = 2,
conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
dat.v01 <- c(400,4600,80,1920); dat.v01
epi.2by2(dat = dat.v01, method = "cohort.count", digits = 2,conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
epi.2by2(dat = dat.v01, method = "cohort.count", digits = 2,conf.level = 0.95, units = 100, interpret = TRUE, outcome = "as.columns")
Cha<-matrix(c(3, 1, 1, 3),nrow = 2,dimnames =list(Indicado = c("Leite", "ChÃ¡"),Real = c("Leite","ChÃ¡")))
Cha
fisher.test(Cha, alternative = "greater")
dados <- c(647,2,622,27); dados
epi.2by2(dat = dados, method = "case.control", digits = 2,conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
epi.2by2(dat = dados, method = "case.control", digits = 2,conf.level = 0.95, units = 100, interpret = TRUE, outcome = "as.columns")
dados <- c(14,4,233,281); dados
epi.2by2(dat = dados, method = "case.control", digits = 2,conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
fisher.test(dados)
Cha<-matrix(c(14, 4, 233, 285),nrow = 2,dimnames =list(Doenca = c("Caso", "Controle"),Exposicao = c("Sim","NÃ£o")))
dados<-matrix(c(14, 4, 233, 285),nrow = 2,dimnames =list(Doenca = c("Caso", "Controle"),Exposicao = c("Sim","NÃ£o")))
dados
dados<-matrix(c(14, 4, 233, 285),ncol = 2,dimnames =list(Doenca = c("Caso", "Controle"),Exposicao = c("Sim","NÃ£o")))
dados
dados<-matrix(c(14, 233, 4, 285),nrow = 2,dimnames =list(Doenca = c("Caso", "Controle"),Exposicao = c("Sim","NÃ£o")))
dados
fisher.test(dados)
epi.tests(dados)
dados<-matrix(c(44, 23, 10, 60),nrow = 2,dimnames =list(Doenca= c("Presente", "Ausente"),Teste = c("Positivo","Negativo")))
dados
dados<-matrix(c(44, 10, 23, 60),nrow = 2,dimnames =list(Doenca= c("Presente", "Ausente"),Teste = c("Positivo","Negativo")))
dados
epi.tests(dados)
dados<-matrix(c(52, 15, 9, 74),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
dados<-matrix(c(52, 9, 15, 74),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados)
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(15, 74, 52, 9),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(52, 15, 9, 74,),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(74, 9, 52, 15),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(74, 52, 9, 15),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(74, 15, 52, 9),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
epi.tests(dados, method = "exact", digits = 2, conf.level = 0.95)
dados<-matrix(c(74, 9, 52, 15),nrow = 2,dimnames =list(Metastase= c("Presente", "Ausente"),Tomografia= c("Positivo","Negativo")))
dados
dados <- c(144,121,1,16); dados
dados <- c(144,121,1,16); dados
dados
epi.2by2(dat = dados, method = "cross.sectional", digits = 2,conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
dados <- c(144,1, 121,16); dados
epi.2by2(dat = dados, method = "cross.sectional", digits = 2,conf.level = 0.95, units = 100, interpret = FALSE, outcome = "as.columns")
fisher.test(daods)
fisher.test(dados)
dados<-matrix(c(144, 1, 121, 16), nrow = 2, dimnames = list(Grupo = c("AZT", "Placebo"), Situacao = c("Vivo", "Ãbito")) )
dados
dados<-matrix(c(144, 121, 1, 16), nrow = 2, dimnames = list(Grupo = c("AZT", "Placebo"), Situacao = c("Vivo", "Ãbito")) )
dados
fisher.test(dados)
dados<-matrix(c(310, 3, 16, 90), nrow = 2, dimnames = list(Trat. A = c("Sim", "NÃ£o"), Trat. B = c("Sim", "NÃ£o")))
dados<-matrix(c(310, 3, 16, 90), nrow = 2, dimnames = list(Trat_A = c("Sim", "NÃ£o"), Trat_B = c("Sim", "NÃ£o")))
dados
mcnemar.test(dados)
mcnemar.test(dados, correct = T)
mcnemar.test(dados, correct = F)
dados<-matrix(c(11, 2, 0, 11), nrow = 2, dimnames = list(Simplificado = c("Baixo", "Alto"), Convencional = c("Baixo", "Alto")))
dados
mcnemar.test(dados, correct = T)
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", âRepublicanoâ), Moradia= c("A", "B", âCâ, âDâ)))
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", âRepublicanoâ), Moradia= c("A", "B", âCâ, âDâ)))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicanoâ), Moradia= c("A", "B", âCâ, âDâ)))
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "Dâ)))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "D"")))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "D")))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "D")))
x<-(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97)
dados<-matrix(x,nrow=3,ncol=4,byrow = T)
dados<-matrix(x,nrow=3,ncol=4,bycol = T)
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "D")))
x<-c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97)
dados<-matrix(x,nrow=3,ncol=4,bycol = T)
dados<-matrix(x,nrow=3,ncol=4)
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4, dimnames = list(Partido = c("Democrata", "Independente", "Republicano"), Moradia= c("A", "B", "Câ, "D")))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4)
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4, dimnames = list(Partido=c("D", "I", "R")))
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4, dimnames = list(Partido=c("D", "I", "R")), Moradia=c("A", "B", "C", "D"))
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4, dimnames = list(Partido=c("D", "I", "R"), Moradia=c("A", "B", "C", "D")))
dados
dados<-matrix(c(221, 200, 208, 100, 291, 108, 300, 160, 316, 140, 311, 97), nrow = 3, ncol = 4, dimnames = list(Partido=c("Democrata", "Independente", "Republicano"), Moradia=c("A", "B", "C", "D")))
dados
chisq.test(dados)
dados<-matrix(c(11, 14, 2, 5, 34, 13, 0, 7, 11), nrow = 3, ncol = 2, dimnames = list(Simplificado=c("Baixo", "MÃ©dio", "Alto"), Convencional=c("Baixo", "MÃ©dio", "Alto")))
dados<-matrix(c(11, 14, 2, 5, 34, 13, 0, 7, 11), nrow = 3, ncol = 2, dimnames = list(Simplificado=c("Baixo", "MÃ©dio", "Alto"), Convencional=c("Baixo", "MÃ©dio", "Alto")))
dados<-matrix(c(11, 14, 2, 5, 34, 13, 0, 7, 11), nrow = 3, ncol = 3, dimnames = list(Simplificado=c("Baixo", "MÃ©dio", "Alto"), Convencional=c("Baixo", "MÃ©dio", "Alto")))
dados
epi.kappa(dados,method="fleiss")
epi.kappa(dados,method="cohen")
install.packages("vcd")
require(vcd)
Kappa(dados)
confint(Kappa(dados))
dados<-matrix(c(44, 10, 23, 60),nrow = 2,dimnames =list(Doenca= c("Presente", "Ausente"),Teste = c("Positivo","Negativo")))
sensitivity(dados)
